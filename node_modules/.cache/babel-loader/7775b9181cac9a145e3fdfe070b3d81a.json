{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenmontesano/upenn/homework/ClickyGame/click-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport images from \"./images.json\";\nimport \"./App.css\";\nimport Jumbotron from \"./components/jumbotron/index\";\nimport ScoreHeader from \"./components/scoreHeader/index\";\nimport MemoryCard from \"./components/memoryCard/index\";\nimport Container from \"./components/cardContainer/index\";\nimport shuffle from 'shuffle-array';\nlet keyList = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images,\n      score: 0\n    };\n\n    this.cardShuffle = state => {\n      let newImages = shuffle(this.state.images);\n      this.setState({\n        images: newImages\n      });\n      console.log(JSON.stringify(state));\n    };\n\n    this.cardClick = id => {\n      let key;\n      let score = this.state.score;\n\n      if (!keyList.includes(key - 1)) {\n        score++;\n        this.setState({\n          score: score\n        });\n        key = this.state.images[id].id;\n        console.log(\"key pres\" + key);\n        keyList.push(key - 1);\n        console.log(\"keyList: \" + keyList);\n        console.log(\"Object \" + JSON.stringify(this.state.images[id - 1]));\n        this.cardShuffle(this.state);\n        console.log(\"key \" + key); // console.log(\"Object \" + JSON.stringify(this.state.images[id -1]));\n      } else {\n        score = 0;\n        keyList = [];\n        this.setState({\n          score: score\n        });\n        alert(\"you lost\");\n      }\n    };\n\n    this.cardShuffle = this.cardShuffle.bind(this);\n    this.cardClick = this.cardClick.bind(this);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(ScoreHeader, {\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), this.state.images.map(image => React.createElement(MemoryCard, {\n      cardClick: this.cardClick,\n      cardShuffle: this.cardShuffle,\n      key: image.id,\n      id: image.id,\n      name: image.name,\n      image: image.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kathleenmontesano/upenn/homework/ClickyGame/click-game/src/App.js"],"names":["React","Component","images","Jumbotron","ScoreHeader","MemoryCard","Container","shuffle","keyList","App","constructor","props","state","score","cardShuffle","newImages","setState","console","log","JSON","stringify","cardClick","id","key","includes","push","alert","bind","render","map","image","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport images from \"./images.json\";\nimport \"./App.css\";\nimport Jumbotron from \"./components/jumbotron/index\";\nimport ScoreHeader from \"./components/scoreHeader/index\";\nimport MemoryCard from \"./components/memoryCard/index\";\nimport Container from \"./components/cardContainer/index\";\nimport shuffle from 'shuffle-array';\nlet keyList = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.cardShuffle = this.cardShuffle.bind(this);\n    this.cardClick = this.cardClick.bind(this);\n  }\n  \n  state = {\n    images,\n    score: 0\n  };\n\n  cardShuffle = (state) => {\n    let newImages = shuffle(this.state.images);\n    this.setState ({\n      images: newImages\n    })\n    console.log(JSON.stringify(state))\n  }\n\n  \n\n  cardClick = (id) => {\n    let key;\n    let score = this.state.score;\n    \n\n   \n    if (!keyList.includes(key - 1)) {\n    \n      score++;\n      this.setState({\n        score: score\n      });\n      key = this.state.images[id].id\n      console.log(\"key pres\" + key)\n      keyList.push(key - 1);\n      console.log(\"keyList: \" + keyList)\n      console.log(\"Object \" + JSON.stringify(this.state.images[id -1]));\n      this.cardShuffle(this.state);\n      \n      console.log(\"key \" + key)\n   \n      // console.log(\"Object \" + JSON.stringify(this.state.images[id -1]));\n      \n    } else {\n      score = 0\n      keyList = [];\n      this.setState ({\n        score: score\n      });\n      alert(\"you lost\")\n    } \n  }\n\n  render() {\n    return (\n      <Container>\n        <Jumbotron />\n        <ScoreHeader score={this.state.score} />\n        {this.state.images.map(image => (\n          <MemoryCard \n          cardClick={this.cardClick} \n          cardShuffle={this.cardShuffle}\n          key={image.id} \n          id={image.id}\n          name={image.name} \n          image={image.image} \n          />\n        ))}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}