{"ast":null,"code":"var _jsxFileName = \"/Users/kathleenmontesano/upenn/homework/ClickyGame/click-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport images from \"./images.json\";\nimport \"./App.css\";\nimport Jumbotron from \"./components/jumbotron/index\";\nimport ScoreHeader from \"./components/scoreHeader/index\";\nimport MemoryCard from \"./components/memoryCard/index\";\nimport Container from \"./components/cardContainer/index\";\nimport shuffle from 'shuffle-array';\nlet keyList = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images,\n      score: 0\n    };\n\n    this.cardShuffle = state => {\n      let newImages = shuffle(this.state.images);\n      this.setState({\n        images: newImages\n      });\n    };\n\n    this.cardClick = id => {\n      let key;\n      let score = this.state.score;\n\n      if (!keyList.includes(key)) {\n        key = this.state.images[id].id;\n        console.log(\"key pres\" + key);\n        keyList.push(key);\n        console.log(\"keyList: \" + keyList);\n        console.log(\"Object \" + JSON.stringify(this.state.images[id]));\n        score++;\n        this.setState({\n          score: score\n        });\n        key = this.state.images[id].id; // console.log(\"key pres\" + key)\n        // keyList.push(key - 1);\n        // console.log(\"keyList: \" + keyList)\n        // this.getKey(id)\n\n        this.cardShuffle(this.state); // console.log(\"key \" + key)\n        // console.log(\"Object \" + JSON.stringify(this.state.images[id -1]));\n      } else {\n        score = 0;\n        keyList = [];\n        this.setState({\n          score: score\n        });\n        alert(\"you lost\");\n      }\n    };\n\n    this.cardShuffle = this.cardShuffle.bind(this);\n    this.cardClick = this.cardClick.bind(this); // this.getKey = this.getKey.bind(this);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(ScoreHeader, {\n      score: this.state.score,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), this.state.images.map(image => React.createElement(MemoryCard, {\n      cardClick: this.cardClick,\n      cardShuffle: this.cardShuffle,\n      getKey: this.getKey,\n      key: image.id,\n      id: image.id,\n      name: image.name,\n      image: image.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kathleenmontesano/upenn/homework/ClickyGame/click-game/src/App.js"],"names":["React","Component","images","Jumbotron","ScoreHeader","MemoryCard","Container","shuffle","keyList","App","constructor","props","state","score","cardShuffle","newImages","setState","cardClick","id","key","includes","console","log","push","JSON","stringify","alert","bind","render","map","image","getKey","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport images from \"./images.json\";\nimport \"./App.css\";\nimport Jumbotron from \"./components/jumbotron/index\";\nimport ScoreHeader from \"./components/scoreHeader/index\";\nimport MemoryCard from \"./components/memoryCard/index\";\nimport Container from \"./components/cardContainer/index\";\nimport shuffle from 'shuffle-array';\nlet keyList = [];\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.cardShuffle = this.cardShuffle.bind(this);\n    this.cardClick = this.cardClick.bind(this);\n    // this.getKey = this.getKey.bind(this);\n  }\n  \n  state = {\n    images,\n    score: 0\n  };\n\n  cardShuffle = (state) => {\n    let newImages = shuffle(this.state.images);\n    this.setState ({\n      images: newImages\n    })\n    \n  }\n\n  // getKey = (id) => {\n  //   let myId = this.state.images[id].id\n  //   console.log(\"MY ID\" + myId)\n  // }\n\n  \n\n  cardClick = (id) => {\n    let key;\n    let score = this.state.score;\n    \n   \n   \n   \n    if (!keyList.includes(key)) {\n      key = this.state.images[id].id\n      console.log(\"key pres\" + key)\n      keyList.push(key);\n      console.log(\"keyList: \" + keyList)\n      console.log(\"Object \" + JSON.stringify(this.state.images[id]));\n      score++;\n      this.setState({\n        score: score\n      });\n      key = this.state.images[id].id\n      // console.log(\"key pres\" + key)\n      // keyList.push(key - 1);\n      // console.log(\"keyList: \" + keyList)\n      // this.getKey(id)\n     \n      this.cardShuffle(this.state);\n      \n      // console.log(\"key \" + key)\n   \n      // console.log(\"Object \" + JSON.stringify(this.state.images[id -1]));\n      \n    } else {\n      score = 0\n      keyList = [];\n      this.setState ({\n        score: score\n      });\n      alert(\"you lost\")\n    } \n  }\n\n  render() {\n    return (\n      <Container>\n        <Jumbotron />\n        <ScoreHeader score={this.state.score} />\n        {this.state.images.map(image => (\n          <MemoryCard \n          cardClick={this.cardClick} \n          cardShuffle={this.cardShuffle}\n          getKey={this.getKey}\n          key={image.id} \n          id={image.id}\n          name={image.name} \n          image={image.image} \n          />\n        ))}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}